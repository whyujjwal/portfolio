/* Elegant Paper-themed Window Styling */

.window {
  position: absolute;
  display: flex;
  flex-direction: column;
  background-color: var(--neutral-100);
  border-radius: var(--border-radius-lg);
  box-shadow: var(--shadow-lg);
  overflow: hidden;
  transition: box-shadow 0.3s ease, transform 0.3s ease;
  border: 1px solid var(--neutral-300);
  z-index: 10;
}

/* Active window styling */
.window.active {
  z-index: 100;
  box-shadow: var(--shadow-xl);
}

/* Animation class for window state transitions */
.window.animating {
  transition: all 0.3s cubic-bezier(0.19, 1, 0.22, 1);
}

/* Dragging state */
.window.dragging {
  opacity: 0.92;
  transform: scale(1.005);
  transition: none;
  box-shadow: var(--shadow-xl), 0 0 0 1px var(--primary-blue-light);
}

/* Resizing state */
.window.resizing {
  opacity: 0.92;
  transition: none;
}

/* Maximize styling */
.window.maximized {
  border-radius: 0;
  top: 0 !important;
  left: 0 !important;
  transform: none !important;
  box-shadow: none;
  border: none;
}

/* Window titlebar styling */
.window-titlebar {
  display: flex;
  align-items: center;
  padding: 10px 16px;
  background-color: var(--neutral-100);
  border-bottom: 1px solid var(--neutral-300);
  cursor: move;
  user-select: none;
  height: 42px;
}

/* Maximized titlebar styling */
.window.maximized .window-titlebar {
  border-radius: 0;
}

/* Window title styling */
.window-title {
  flex: 1;
  font-weight: 600;
  color: var(--neutral-800);
  font-size: var(--text-sm);
  margin-right: 10px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.window.active .window-title {
  color: var(--primary-blue);
}

/* Window controls container */
.window-controls {
  display: flex;
  align-items: center;
  gap: 6px;
}

/* Window control buttons */
.window-btn {
  width: 20px;
  height: 20px;
  border-radius: 50%;
  border: none;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  font-size: 10px;
  color: var(--neutral-600);
  background-color: var(--neutral-200);
  transition: all 0.2s ease;
  padding: 0;
}

.window-btn:hover {
  transform: scale(1.1);
}

/* Individual window button colors */
.window-btn.minimize {
  color: var(--neutral-700);
  background-color: var(--neutral-300);
}

.window-btn.minimize:hover {
  background-color: var(--neutral-400);
}

.window-btn.maximize {
  color: var(--neutral-800);
  background-color: var(--neutral-300);
}

.window-btn.maximize:hover {
  background-color: var(--neutral-400);
}

.window-btn.close {
  color: white;
  background-color: var(--accent-pink);
}

.window-btn.close:hover {
  background-color: #ff4081;
}

/* Window content area */
.window-content {
  flex: 1;
  overflow: auto;
  background-color: var(--neutral-100);
  position: relative;
}

/* Resize handles */
.resize-handle {
  position: absolute;
  background-color: transparent;
}

/* Corner resize handles */
.resize-handle.nw, .resize-handle.ne, .resize-handle.sw, .resize-handle.se {
  width: 12px;
  height: 12px;
  z-index: 20;
}

/* Edge resize handles */
.resize-handle.n, .resize-handle.s {
  height: 6px;
  left: 12px;
  right: 12px;
  z-index: 20;
  cursor: ns-resize;
}

.resize-handle.e, .resize-handle.w {
  width: 6px;
  top: 12px;
  bottom: 12px;
  z-index: 20;
  cursor: ew-resize;
}

/* Positioning for each handle */
.resize-handle.n {
  top: 0;
  transform: translateY(-3px);
}

.resize-handle.e {
  right: 0;
  transform: translateX(3px);
}

.resize-handle.s {
  bottom: 0;
  transform: translateY(3px);
}

.resize-handle.w {
  left: 0;
  transform: translateX(-3px);
}

/* Corner positioning */
.resize-handle.nw {
  top: 0;
  left: 0;
  cursor: nwse-resize;
  transform: translate(-6px, -6px);
}

.resize-handle.ne {
  top: 0;
  right: 0;
  cursor: nesw-resize;
  transform: translate(6px, -6px);
}

.resize-handle.sw {
  bottom: 0;
  left: 0;
  cursor: nesw-resize;
  transform: translate(-6px, 6px);
}

.resize-handle.se {
  bottom: 0;
  right: 0;
  cursor: nwse-resize;
  transform: translate(6px, 6px);
}

/* Window drop shadow effect when active */
.window.active {
  box-shadow: 0 12px 28px rgba(0, 0, 0, 0.12), 0 0 0 1px rgba(0, 0, 0, 0.05);
}

/* Window state animations */
@keyframes windowOpen {
  from {
    opacity: 0;
    transform: scale(0.95);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes windowClose {
  from {
    opacity: 1;
    transform: scale(1);
  }
  to {
    opacity: 0;
    transform: scale(0.95);
  }
}

/* Apply opening animation to new windows */
.window {
  animation: windowOpen 0.3s cubic-bezier(0.19, 1, 0.22, 1);
}

/* App-specific styling can be added for windows based on app ID */
.window.app-github .window-titlebar {
  border-bottom-color: #24292e;
}

.window.app-terminal .window-titlebar {
  background-color: #2c3e50;
  color: white;
}

.window.app-terminal .window-title {
  color: white;
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .window {
    min-width: 300px !important;
  }
  
  .window-controls {
    gap: 8px;
  }
  
  .window-btn {
    width: 24px;
    height: 24px;
    font-size: 12px;
  }
}

/* Paper UI integration */
.window {
  border-radius: var(--border-radius-lg);
  background-color: var(--neutral-100);
  box-shadow: var(--shadow-lg);
}

.window-titlebar {
  border-top-left-radius: var(--border-radius-lg);
  border-top-right-radius: var(--border-radius-lg);
  border-bottom: 1px solid var(--neutral-300);
}

/* Paper texture effect */
.window::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' viewBox='0 0 100 100'%3E%3Cfilter id='noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.8' numOctaves='4' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100' height='100' filter='url(%23noise)' opacity='0.03'/%3E%3C/svg%3E");
  border-radius: var(--border-radius-lg);
  pointer-events: none;
  opacity: 0.4;
  z-index: -1;
}

.window.maximized::before {
  border-radius: 0;
}
